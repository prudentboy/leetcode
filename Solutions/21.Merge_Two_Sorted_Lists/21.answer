/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2)
    {
        ListNode *node = NULL, *head = NULL;
        int val = 0;
        if (l1 == NULL)
            return l2;
        if (l2 == NULL)
            return l1;
        while(l1 && l2)
        {
            if (l1->val < l2->val)
            {
                val = l1->val;
                l1 = l1->next;
            }
            else
            {
                val = l2->val;
                l2 = l2->next;
            }
            ListNode *cur = new ListNode(val);
            if (!head)
                head = cur;
            if (node)
                node->next = cur;
            node = cur;
        }
        while(l1)
        {
            ListNode *cur = new ListNode(l1->val);
            node->next = cur;
            node = node->next;
            l1 = l1->next;
        }
        while(l2)
        {
            ListNode *cur = new ListNode(l2->val);
            node->next = cur;
            node = node->next;
            l2 = l2->next;
        }
        return head;
    }
};
