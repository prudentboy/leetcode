/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode *node = NULL, *head = NULL;
        int carry = 0, sum = 0, val = 0;
        while(l1 && l2)
        {
            sum = l1->val + l2->val + carry;
            val = sum % 10;
            carry = sum / 10;
            ListNode *cur = new ListNode(val);
            if (!head)
                head = cur;
            if (node)
                node->next = cur;
            node = cur;
            l1 = l1->next;
            l2 = l2->next;
        }
        while(l1)
        {
            sum = l1->val + carry;
            val = sum % 10;
            carry = sum / 10;
            ListNode *cur = new ListNode(val);
            node->next = cur;
            node = node->next;
            l1 = l1->next;
        }
        while(l2)
        {
            sum = l2->val + carry;
            val = sum % 10;
            carry = sum / 10;
            ListNode *cur = new ListNode(val);
            node->next = cur;
            node = node->next;
            l2 = l2->next;
        }
        if (carry != 0)
        {
            ListNode *cur = new ListNode(carry);
            node->next = cur;
        }
        return head;
    }
};
